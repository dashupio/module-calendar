<calendar-day>
  <div class="calendar-day">
    <div class="calendar-table d-flex">
      <div class="table-colgroup w-25 pr-2">
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th>
                { day }
              </th>
            </tr>
          </thead>
        </table>

      </div>
      <div class="table-scrolling w-75">
        <table class="table table-bordered table-striped">
          <thead>
            <tr>
              <th each={ (hour, i) in state.hours }>
                { hour[1].toString() }{ hour[0] > 11 ? 'pm' : 'am' }
              </th>
            </tr>
          </thead>
        </table>

      </div>
    </div>
  </div>

  <script>
    // require base class
    import moment from 'moment';
    import PerfectScrollbar from 'perfect-scrollbar';

    // export default
    export default class CalendarDay {
      /**
       * on before mount
       */
      onBeforeMount(...args) {
        // set state elements
        this.date = this.props.date || new Date();
        this.state.hours = [
          [0, 12],
          [1, 1],
          [2, 2],
          [3, 3],
          [4, 4],
          [5, 5],
          [6, 6],
          [7, 7],
          [8, 8],
          [9, 9],
          [10, 10],
          [11, 11],
          [12, 12],
          [13, 1],
          [14, 2],
          [15, 3],
          [16, 4],
          [17, 5],
          [18, 6],
          [19, 7],
          [20, 8],
          [21, 9],
          [22, 10],
          [23, 11],
        ];

        // set day
        this.day = moment(this.date).format('dddd LL');
      }

      /**
       * on mounted
       */
      onBeforeUpdate(...args) {
        // check frontend
        if (typeof window === 'undefined') return;
        
        // set day
        this.date = this.props.date || new Date();
        this.day = moment(this.date).format('dddd LL');
      }

      /**
       * on mounted
       */
      onMounted(...args) {
        // check frontend
        if (typeof window === 'undefined') return;

        // setup ps
        this.ps = this.ps || new PerfectScrollbar(this.$('.table-scrolling'));
      }


      // ////////////////////////////////////////////////////////////////////////////
      //
      // MISC METHODS
      //
      // ////////////////////////////////////////////////////////////////////////////

      /**
       * ref
       */
      ref(name) {
        // set refs
        if (!this.refs) this.refs = {};

        // return ref function
        return (that) => {
          // set ref
          this.refs[name] = that;
        };
      }

      /**
       * classes
       */
      classes(obj) {
        // return classes
        return Object.keys(obj).filter((key) => !!obj[key]).join(' ');
      }

      /**
       * set loading
       */
      loading(type, way) {
        // set loading
        if (!this.__loading) this.__loading = new Map();

        // check loading
        if (!type) return !!Array.from(this.__loading.values()).find((v) => v);
        if (typeof way === 'undefined') return !!this.__loading.get(type);

        // set loading
        this.__loading.set(type, way);
        this.update();
      }
    }
  </script>
</calendar-day>